# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-12 19:55
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('almacenes', '0029_auto_20170501_1611'),
    ]

    operations = [
        migrations.AlterField(
            model_name='ingresoherramientas',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresoherramientas',
            name='costo_total',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresoherramientas',
            name='no_factura',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='Numero Invalido', message='El numero de factura tiene de 5 a 20 cifras', regex='^[0-9]{5,20}$')]),
        ),
        migrations.AlterField(
            model_name='ingresoinsumos',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresoinsumos',
            name='costo_total',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresoinsumos',
            name='no_factura',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='Numero Invalido', message='El numero de factura tiene de 5 a 20 cifras', regex='^[0-9]{5,20}$')]),
        ),
        migrations.AlterField(
            model_name='ingresomaquinaria_equipo',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresomaquinaria_equipo',
            name='costo_total',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresomaterial',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresomaterial',
            name='costo_total',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='ingresomaterial',
            name='no_factura',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='Numero Invalido', message='El numero de factura tiene de 5 a 20 cifras', regex='^[0-9]{5,20}$')]),
        ),
        migrations.AlterField(
            model_name='salidaherramientas',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='salidainsumos',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='salidamaquinaria_equipo',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
        migrations.AlterField(
            model_name='salidamaterial',
            name='cantidad',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'El valor no puede ser cero')]),
        ),
    ]
